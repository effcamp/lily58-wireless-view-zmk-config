/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            label = "Base";
            bindings = <
&kp GRAVE     &kp N1  &kp N2  &kp N3        &kp N4        &kp N5                                                  &kp N6           &kp N7      &kp N8     &kp N9   &kp N0    &kp BACKSPACE
&kp TAB       &kp Q   &kp W   &kp E         &kp R         &kp T                                                   &kp Y            &kp U       &kp I      &kp O    &kp P     &kp BACKSPACE
&lt 2 ESCAPE  &kp A   &kp S   &kp D         &kp F         &kp G                                                   &kp H            &kp J       &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL     &kp Z   &kp X   &kp C         &kp V         &kp B        &kp LA(LG(LCTRL))       &kp LG(LA(LCTRL))  &kp N            &kp M       &kp COMMA  &kp DOT  &kp FSLH  &mt RSHFT ENTER
                              &kp LEFT_WIN  &kp LEFT_ALT  &lt 1 SPACE  &mt LEFT_SHIFT ENTER    &lt 1 SPACE        &lt 2 BACKSPACE  &kp DELETE  &kp LWIN
            >;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Raise";
            bindings = <
&trans     &trans           &trans       &trans     &trans      &trans                         &trans     &trans         &trans                 &trans           &trans             &trans
&kp GRAVE  &kp EXCLAMATION  &kp AT_SIGN  &kp POUND  &kp DOLLAR  &kp PERCENT                    &kp CARET  &kp AMPERSAND  &kp ASTERISK           &kp PIPE         &kp BACKSLASH      &kp BACKSPACE
&trans     &kp N1           &kp N2       &kp N3     &kp N4      &kp N5                         &kp MINUS  &kp EQUAL      &kp LEFT_PARENTHESIS   &kp LEFT_BRACE   &kp LEFT_BRACKET   &kp DELETE
&trans     &kp N6           &kp N7       &kp N8     &kp N9      &kp N0       &trans    &trans  &kp UNDER  &kp PLUS       &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACE  &kp RIGHT_BRACKET  &trans
                                         &trans     &trans      &trans       &trans    &trans  &trans     &trans         &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        lower_layer {
            // ------------------------------------------------------------------------------------------------------------
            // | BTCLR | BT1 | BT2 |  BT3 |  BT4 |  BT5 |                   |      |       |       |      |       |       |
            // |  F1   |  F2 |  F3 |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |     |     |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                     |      |      |      |        |  |       |      |       |       |

            label = "Lower";
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &tog 0             &tog 3          &trans        &trans      &trans         &trans
&trans      &kp F1        &kp F2        &kp F3        &kp F4        &kp F5                          &kp C_VOLUME_UP    &kp HOME        &kp UP_ARROW  &kp END     &kp PAGE_UP    &kp BACKSPACE
&trans      &kp F6        &kp F7        &kp F8        &kp F9        &kp F10                         &kp C_VOLUME_DOWN  &kp LEFT_ARROW  &kp DOWN      &kp RIGHT   &kp PAGE_DOWN  &kp DELETE
&trans      &trans        &trans        &trans        &kp F11       &kp F12       &trans    &trans  &kp C_MUTE         &kp C_PREV      &kp C_PLAY    &kp C_NEXT  &kp CAPSLOCK   &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans             &trans          &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        gaming {
            bindings = <
&kp GRAVE  &kp N1  &kp N2  &kp N3    &kp N4  &kp N5                             &kp N6  &kp N7  &kp N8     &kp N9   &kp N0    &kp BSPC
&kp TAB    &kp Q   &kp W   &kp E     &kp R   &kp T                              &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &kp A   &kp S   &kp D     &kp F   &kp G                              &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp SQT
&kp LCTRL  &kp Z   &kp X   &kp C     &kp V   &kp B      &kp LBKT     &kp RBKT   &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp ENTER
                           &kp LALT  &mo 1   &kp SPACE  &kp LSHFT    &kp SPACE  &tog 0  &tog 3  &kp LWIN
            >;

            label = "Gaming";
        };
    };
};
